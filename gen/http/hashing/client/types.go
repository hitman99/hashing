// Code generated by goa v3.0.2, DO NOT EDIT.
//
// hashing HTTP client types
//
// Command:
// $ goa gen github.com/hitman99/hashing/design

package client

import (
	hashingviews "github.com/hitman99/hashing/gen/hashing/views"
)

// Sha256ResponseBody is the type of the "hashing" service "sha256" endpoint
// HTTP response body.
type Sha256ResponseBody struct {
	// Hashing algorithm
	Type *string `form:"type,omitempty" json:"type,omitempty" xml:"type,omitempty"`
	// Hash string in hex format
	Hash *string `form:"hash,omitempty" json:"hash,omitempty" xml:"hash,omitempty"`
}

// Sha512ResponseBody is the type of the "hashing" service "sha512" endpoint
// HTTP response body.
type Sha512ResponseBody struct {
	// Hashing algorithm
	Type *string `form:"type,omitempty" json:"type,omitempty" xml:"type,omitempty"`
	// Hash string in hex format
	Hash *string `form:"hash,omitempty" json:"hash,omitempty" xml:"hash,omitempty"`
}

// Md5ResponseBody is the type of the "hashing" service "md5" endpoint HTTP
// response body.
type Md5ResponseBody struct {
	// Hashing algorithm
	Type *string `form:"type,omitempty" json:"type,omitempty" xml:"type,omitempty"`
	// Hash string in hex format
	Hash *string `form:"hash,omitempty" json:"hash,omitempty" xml:"hash,omitempty"`
}

// Sha1ResponseBody is the type of the "hashing" service "sha1" endpoint HTTP
// response body.
type Sha1ResponseBody struct {
	// Hashing algorithm
	Type *string `form:"type,omitempty" json:"type,omitempty" xml:"type,omitempty"`
	// Hash string in hex format
	Hash *string `form:"hash,omitempty" json:"hash,omitempty" xml:"hash,omitempty"`
}

// Sha384ResponseBody is the type of the "hashing" service "sha384" endpoint
// HTTP response body.
type Sha384ResponseBody struct {
	// Hashing algorithm
	Type *string `form:"type,omitempty" json:"type,omitempty" xml:"type,omitempty"`
	// Hash string in hex format
	Hash *string `form:"hash,omitempty" json:"hash,omitempty" xml:"hash,omitempty"`
}

// NewSha256HashingresultOK builds a "hashing" service "sha256" endpoint result
// from a HTTP "OK" response.
func NewSha256HashingresultOK(body *Sha256ResponseBody) *hashingviews.HashingresultView {
	v := &hashingviews.HashingresultView{
		Type: body.Type,
		Hash: body.Hash,
	}
	return v
}

// NewSha512HashingresultOK builds a "hashing" service "sha512" endpoint result
// from a HTTP "OK" response.
func NewSha512HashingresultOK(body *Sha512ResponseBody) *hashingviews.HashingresultView {
	v := &hashingviews.HashingresultView{
		Type: body.Type,
		Hash: body.Hash,
	}
	return v
}

// NewMd5HashingresultOK builds a "hashing" service "md5" endpoint result from
// a HTTP "OK" response.
func NewMd5HashingresultOK(body *Md5ResponseBody) *hashingviews.HashingresultView {
	v := &hashingviews.HashingresultView{
		Type: body.Type,
		Hash: body.Hash,
	}
	return v
}

// NewSha1HashingresultOK builds a "hashing" service "sha1" endpoint result
// from a HTTP "OK" response.
func NewSha1HashingresultOK(body *Sha1ResponseBody) *hashingviews.HashingresultView {
	v := &hashingviews.HashingresultView{
		Type: body.Type,
		Hash: body.Hash,
	}
	return v
}

// NewSha384HashingresultOK builds a "hashing" service "sha384" endpoint result
// from a HTTP "OK" response.
func NewSha384HashingresultOK(body *Sha384ResponseBody) *hashingviews.HashingresultView {
	v := &hashingviews.HashingresultView{
		Type: body.Type,
		Hash: body.Hash,
	}
	return v
}
