// Code generated by goa v3.0.2, DO NOT EDIT.
//
// hashing HTTP server encoders and decoders
//
// Command:
// $ goa gen github.com/hitman99/hashing/design

package server

import (
	"context"
	"net/http"

	hashingviews "github.com/hitman99/hashing/gen/hashing/views"
	goahttp "goa.design/goa/v3/http"
)

// EncodeSha256Response returns an encoder for responses returned by the
// hashing sha256 endpoint.
func EncodeSha256Response(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) func(context.Context, http.ResponseWriter, interface{}) error {
	return func(ctx context.Context, w http.ResponseWriter, v interface{}) error {
		res := v.(*hashingviews.Hashingresult)
		enc := encoder(ctx, w)
		body := NewSha256ResponseBody(res.Projected)
		w.WriteHeader(http.StatusOK)
		return enc.Encode(body)
	}
}

// DecodeSha256Request returns a decoder for requests sent to the hashing
// sha256 endpoint.
func DecodeSha256Request(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) func(*http.Request) (interface{}, error) {
	return func(r *http.Request) (interface{}, error) {
		var (
			string_ string

			params = mux.Vars(r)
		)
		string_ = params["string"]
		payload := NewSha256Payload(string_)

		return payload, nil
	}
}

// EncodeSha512Response returns an encoder for responses returned by the
// hashing sha512 endpoint.
func EncodeSha512Response(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) func(context.Context, http.ResponseWriter, interface{}) error {
	return func(ctx context.Context, w http.ResponseWriter, v interface{}) error {
		res := v.(*hashingviews.Hashingresult)
		enc := encoder(ctx, w)
		body := NewSha512ResponseBody(res.Projected)
		w.WriteHeader(http.StatusOK)
		return enc.Encode(body)
	}
}

// DecodeSha512Request returns a decoder for requests sent to the hashing
// sha512 endpoint.
func DecodeSha512Request(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) func(*http.Request) (interface{}, error) {
	return func(r *http.Request) (interface{}, error) {
		var (
			string_ string

			params = mux.Vars(r)
		)
		string_ = params["string"]
		payload := NewSha512Payload(string_)

		return payload, nil
	}
}

// EncodeMd5Response returns an encoder for responses returned by the hashing
// md5 endpoint.
func EncodeMd5Response(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) func(context.Context, http.ResponseWriter, interface{}) error {
	return func(ctx context.Context, w http.ResponseWriter, v interface{}) error {
		res := v.(*hashingviews.Hashingresult)
		enc := encoder(ctx, w)
		body := NewMd5ResponseBody(res.Projected)
		w.WriteHeader(http.StatusOK)
		return enc.Encode(body)
	}
}

// DecodeMd5Request returns a decoder for requests sent to the hashing md5
// endpoint.
func DecodeMd5Request(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) func(*http.Request) (interface{}, error) {
	return func(r *http.Request) (interface{}, error) {
		var (
			string_ string

			params = mux.Vars(r)
		)
		string_ = params["string"]
		payload := NewMd5Payload(string_)

		return payload, nil
	}
}

// EncodeSha1Response returns an encoder for responses returned by the hashing
// sha1 endpoint.
func EncodeSha1Response(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) func(context.Context, http.ResponseWriter, interface{}) error {
	return func(ctx context.Context, w http.ResponseWriter, v interface{}) error {
		res := v.(*hashingviews.Hashingresult)
		enc := encoder(ctx, w)
		body := NewSha1ResponseBody(res.Projected)
		w.WriteHeader(http.StatusOK)
		return enc.Encode(body)
	}
}

// DecodeSha1Request returns a decoder for requests sent to the hashing sha1
// endpoint.
func DecodeSha1Request(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) func(*http.Request) (interface{}, error) {
	return func(r *http.Request) (interface{}, error) {
		var (
			string_ string

			params = mux.Vars(r)
		)
		string_ = params["string"]
		payload := NewSha1Payload(string_)

		return payload, nil
	}
}

// EncodeSha384Response returns an encoder for responses returned by the
// hashing sha384 endpoint.
func EncodeSha384Response(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) func(context.Context, http.ResponseWriter, interface{}) error {
	return func(ctx context.Context, w http.ResponseWriter, v interface{}) error {
		res := v.(*hashingviews.Hashingresult)
		enc := encoder(ctx, w)
		body := NewSha384ResponseBody(res.Projected)
		w.WriteHeader(http.StatusOK)
		return enc.Encode(body)
	}
}

// DecodeSha384Request returns a decoder for requests sent to the hashing
// sha384 endpoint.
func DecodeSha384Request(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) func(*http.Request) (interface{}, error) {
	return func(r *http.Request) (interface{}, error) {
		var (
			string_ string

			params = mux.Vars(r)
		)
		string_ = params["string"]
		payload := NewSha384Payload(string_)

		return payload, nil
	}
}
