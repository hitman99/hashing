// Code generated by goa v3.0.2, DO NOT EDIT.
//
// hashing endpoints
//
// Command:
// $ goa gen github.com/hitman99/hashing/design

package hashing

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "hashing" service endpoints.
type Endpoints struct {
	Sha256 goa.Endpoint
	Sha512 goa.Endpoint
	Md5    goa.Endpoint
	Sha1   goa.Endpoint
	Sha384 goa.Endpoint
}

// NewEndpoints wraps the methods of the "hashing" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Sha256: NewSha256Endpoint(s),
		Sha512: NewSha512Endpoint(s),
		Md5:    NewMd5Endpoint(s),
		Sha1:   NewSha1Endpoint(s),
		Sha384: NewSha384Endpoint(s),
	}
}

// Use applies the given middleware to all the "hashing" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Sha256 = m(e.Sha256)
	e.Sha512 = m(e.Sha512)
	e.Md5 = m(e.Md5)
	e.Sha1 = m(e.Sha1)
	e.Sha384 = m(e.Sha384)
}

// NewSha256Endpoint returns an endpoint function that calls the method
// "sha256" of service "hashing".
func NewSha256Endpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*Sha256Payload)
		res, err := s.Sha256(ctx, p)
		if err != nil {
			return nil, err
		}
		vres := NewViewedHashingresult(res, "default")
		return vres, nil
	}
}

// NewSha512Endpoint returns an endpoint function that calls the method
// "sha512" of service "hashing".
func NewSha512Endpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*Sha512Payload)
		res, err := s.Sha512(ctx, p)
		if err != nil {
			return nil, err
		}
		vres := NewViewedHashingresult(res, "default")
		return vres, nil
	}
}

// NewMd5Endpoint returns an endpoint function that calls the method "md5" of
// service "hashing".
func NewMd5Endpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*Md5Payload)
		res, err := s.Md5(ctx, p)
		if err != nil {
			return nil, err
		}
		vres := NewViewedHashingresult(res, "default")
		return vres, nil
	}
}

// NewSha1Endpoint returns an endpoint function that calls the method "sha1" of
// service "hashing".
func NewSha1Endpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*Sha1Payload)
		res, err := s.Sha1(ctx, p)
		if err != nil {
			return nil, err
		}
		vres := NewViewedHashingresult(res, "default")
		return vres, nil
	}
}

// NewSha384Endpoint returns an endpoint function that calls the method
// "sha384" of service "hashing".
func NewSha384Endpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*Sha384Payload)
		res, err := s.Sha384(ctx, p)
		if err != nil {
			return nil, err
		}
		vres := NewViewedHashingresult(res, "default")
		return vres, nil
	}
}
